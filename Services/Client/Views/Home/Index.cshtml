@model List<Domain.Models.Book>

    <head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('purchaseForm');
            const clientRadios = document.querySelectorAll('input[name="selectedClient"]');
            const bookRadios = document.querySelectorAll('input[name="selectedBook"]');
            const submitBtn = document.getElementById('submitBtn');
            const quantityInput = document.getElementById('quantity');
            const stockInfo = document.getElementById('stockInfo');

            // Handle client selection
            clientRadios.forEach(radio => {
                radio.addEventListener('change', function () {
                    // Remove selected class from all items
                    document.querySelectorAll('#clientsList .list-group-item').forEach(item => {
                        item.classList.remove('selected');
                    });

                    // Add selected class to parent
                    this.closest('.list-group-item').classList.add('selected');

                    // Get client details
                    const label = this.closest('label');
                    const clientName = label.querySelector('strong').textContent;

                    // Update hidden input and display
                    document.getElementById('userId').value = this.value;
                    document.getElementById('selectedClientDisplay').textContent = clientName;

                    updateSubmitButton();
                });
            });

            // Handle book selection
            bookRadios.forEach(radio => {
                radio.addEventListener('change', function () {
                    // Remove selected class from all items
                    document.querySelectorAll('#booksList .list-group-item').forEach(item => {
                        item.classList.remove('selected');
                    });

                    // Add selected class to parent
                    this.closest('.list-group-item').classList.add('selected');

                    // Get book details
                    const label = this.closest('label');
                    const bookTitle = label.querySelector('strong').textContent;
                    const maxQty = parseInt(this.dataset.maxQty);
                    const price = parseFloat(this.dataset.price);

                    // Update hidden inputs and displays
                    document.getElementById('bookId').value = this.value;
                    document.getElementById('pricePerPC').value = price;
                    document.getElementById('selectedBookDisplay').textContent = bookTitle;

                    // Update quantity constraints
                    quantityInput.max = maxQty;
                    quantityInput.value = Math.min(parseInt(quantityInput.value) || 1, maxQty);
                    stockInfo.textContent = `Maximum available: ${maxQty}`;

                    updateSubmitButton();
                });
            });

            // Handle quantity changes
            quantityInput.addEventListener('input', function () {
                const max = parseInt(this.max) || 1;
                const value = parseInt(this.value) || 1;

                if (value > max) {
                    this.value = max;
                } else if (value < 1) {
                    this.value = 1;
                }
            });

            function updateSubmitButton() {
                const hasClient = document.getElementById('userId').value !== '';
                const hasBook = document.getElementById('bookId').value !== '';
                submitBtn.disabled = !(hasClient && hasBook);
            }

            // Auto-dismiss alerts after 5 seconds
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    const closeButton = alert.querySelector('.btn-close');
                    if (closeButton) {
                        closeButton.click();
                    }
                }, 5000);
            });
        });
    </script>
    </head>

@{
    var clients = ViewBag.Clients as IEnumerable<Domain.Models.User>;
}

<div class="container-fluid py-4">
    <h1 class="display-4 mb-4">Book Store</h1>

    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewBag.Error
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row g-4">
        <!-- Clients Section -->
        <div class="col-md-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-people-fill me-2"></i>Available Clients
                    </h5>
                </div>
                <div class="card-body">
                    <div class="list-group" id="clientsList">
                        @foreach (var client in clients)
                        {
                            <label class="list-group-item list-group-item-action">
                                <input type="radio" name="selectedClient" value="@client.UserId" class="form-check-input me-2" />
                                <div>
                                    <strong>@client.Fullname</strong>
                                    <small class="d-block text-muted">@client.Email</small>
                                    <span class="badge bg-success">Balance: $@client.Balance.ToString("F2")</span>
                                </div>
                            </label>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Books Section -->
        <div class="col-md-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-book-fill me-2"></i>Available Books
                    </h5>
                </div>
                <div class="card-body">
                    <div class="list-group" id="booksList">
                        @foreach (var book in Model)
                        {
                            <label class="list-group-item list-group-item-action">
                                <input type="radio" name="selectedBook" value="@book.BookId"
                                       data-price="@book.Price" data-max-qty="@book.Quantity"
                                       class="form-check-input me-2" />
                                <div>
                                    <strong>@book.Title</strong>
                                    <small class="d-block text-muted">by @book.Author</small>
                                    <div class="d-flex justify-content-between align-items-center mt-1">
                                        <span class="badge bg-primary">$@book.Price.ToString("F2")</span>
                                        <small class="text-muted">@book.Quantity in stock</small>
                                    </div>
                                </div>
                            </label>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Purchase Form -->
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-cart-fill me-2"></i>Purchase Book
                    </h5>
                </div>
                <div class="card-body">
                    <form action="buy" method="post" id="purchaseForm">
                        <input type="hidden" name="UserId" id="userId" />
                        <input type="hidden" name="BookId" id="bookId" />
                        <input type="hidden" name="PricePerPC" id="pricePerPC" />

                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Selected Client</label>
                                <div class="form-control bg-light" id="selectedClientDisplay">Please select a client</div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Selected Book</label>
                                <div class="form-control bg-light" id="selectedBookDisplay">Please select a book</div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Quantity</label>
                                <input type="number" name="Quantity" class="form-control" id="quantity"
                                       value="1" required />
                                <div class="form-text" id="stockInfo"></div>
                            </div>
                        </div>

                        <div class="mt-4">
                            <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                                Complete Purchase
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        .list-group-item {
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .list-group-item:hover {
            background-color: #f8f9fa;
        }

        .list-group-item.selected {
            background-color: #e9ecef;
        }

        .form-check-input:checked + div {
            color: var(--bs-primary);
        }
    </style>
}